#!/usr/bin/env python

import argparse
import glob
import os
import sys

if not os.environ.get("PYTHONPATH"):
    root_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    os.environ.setdefault("PYTHONPATH", root_dir)
    code = os.system(" ".join(sys.argv))
    sys.exit(code // 256)


from datetime import datetime

from lib.solver import solve
from lib.format import format_failure, format_success, format_timing
from lib.languages import all_languages


current_day = datetime.utcnow()
parser = argparse.ArgumentParser(
    description=(
        "Run Advent of Code solution for a given year/day in the chosen language"
    )
)

default_year = os.environ.get("YEAR", str(current_day.year))
parser.add_argument(
    "-y",
    "--year",
    help=f"competition year (default: {default_year})",
    default=default_year,
)

default_day = os.environ.get("DAY", str(current_day.day))
parser.add_argument(
    "-d",
    "--day",
    help=f"competition day (default: {default_day})",
    default=default_day,
)

language_helper = f"available languages: {', '.join(all_languages())}"
parser.add_argument(
    "-l",
    "--language",
    nargs="+",
    help=f"programming language of the solution to run ({language_helper})",
)
parser.add_argument(
    "--all", help=f"run all challenge days in all languages", action="store_true"
)
parser.add_argument(
    "--save", help=f"save the programs output to output.txt", action="store_true"
)

args = parser.parse_args()

try:
    if args.all:
        if args.save:
            print("Cannot use `--save` with `--all`")
            exit(1)
        years = glob.glob("2*")
        years.sort()
        for year in years:
            days = glob.glob(f"{year}/[012]?")
            days.sort()
            for day in days:
                solve(args.language, year, day.split("/")[-1])
    else:
        solve(args.language, args.year, args.day, args.save)
except KeyboardInterrupt as e:
    sys.exit(1)
except Exception as e:
    print(e)
    sys.exit(1)
